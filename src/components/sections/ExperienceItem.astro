---
import type { SkillType } from '@/common/data';
import { skills } from '@/common/data';
import Skill from './Skill.astro';
import { classNames } from '@/common/utils';

export interface ExperienceItemProps {
  title: string;
  company: string;
  companyDescription: string;
  concentration: string;
  date: string;
  description: string[];
  techStack: string[];
  fromLeft?: boolean;
  fromRight?: boolean;
}

const {
  title,
  company,
  companyDescription,
  concentration,
  date,
  description,
  techStack,
  fromLeft,
  fromRight,
} = Astro.props as ExperienceItemProps;

const skillList: SkillType[] = techStack
  .map((skill) => skills.find((s) => s.name === skill))
  .filter((s) => s !== undefined);

let direction = '';
if (fromRight) {
  direction = 'from-right';
} else if (fromLeft) {
  direction = 'from-left';
}

const companyId = company.split(' ').join('-');
---

<div class={classNames('experience-item', direction)} id={companyId}>
  <div class="experience-item-header">
    <div>
      <p>{company}</p>
      <h3 class="title">
        {title}
        <span class="concentration">{`(${concentration})`}</span>
      </h3>
    </div>
    <p>{date}</p>
  </div>
  <div class="experience-item-content-container">
    <p>{companyDescription}</p>
    <div class="intersection-anchor"></div>
    <div class="experience-item-content">
      <div>
        {skillList.map((skill) => <Skill {...skill} />)}
      </div>
      <div class="experience-item-description">
        {description.map((item) => <p>{item}</p>)}
      </div>
    </div>
  </div>
</div>

<script>
  const items = document.querySelectorAll('.experience-item');
  items.forEach((item) => {
    const companyId = item.children[0].children[0].children[0]
      .textContent!.trim()
      .split(' ')
      .join('-');

    const intersectionAnchor = item.querySelector('.intersection-anchor');
    if (!intersectionAnchor) return;

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          toggleItem(companyId);
          observer.unobserve(entry.target);
        }
      });
    });
    observer.observe(intersectionAnchor);
  });

  function toggleItem(companyId: string) {
    const item = document.querySelector(`#${companyId}`);

    if (item) {
      item.classList.remove('from-right', 'from-left');
    }
  }
</script>

<style>
  .from-right {
    margin-left: 20%;
    margin-right: -20%;
  }
  .from-left {
    margin-left: -20%;
    margin-right: 20%;
  }

  .concentration {
    color: rgb(126, 119, 119);
    font-size: 1rem;
  }
  .experience-item-description {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  .experience-item-description p {
    color: whitesmoke;
  }
  .title {
    color: whitesmoke;
  }
  .experience-item {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    transition: all 1.5s ease;
    /* transition-delay: 0.25s; */
  }
  .experience-item-header {
    align-items: flex-end;
    display: flex;
    justify-content: space-between;
  }
  .experience-item-content-container {
    margin: 0.5rem;
    padding: 1rem;
    border: 1px solid rgb(126, 119, 119);
    border-radius: 0.5rem;
    flex-direction: column;
    display: flex;
    gap: 0.5rem;
  }
  .experience-item-content-container > p {
    font-size: 1rem;
  }
  .experience-item-content {
    display: grid;
    grid-template-columns: 1fr 4fr;
    gap: 0.5rem;
    padding-top: 0.5rem;
    border-top: 1px solid rgb(126, 119, 119);
  }
  .experience-item-content > * {
    width: 100%;
  }
</style>
